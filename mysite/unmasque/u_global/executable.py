
"""
following function is refactored version generated by chatGPT
Test it though-roughly
"""


def get_result_as_tuple_1(res, result):
    for row in res:
        # Check if the whole row is None (SPJA Case)
        if all(val is None for val in row):
            continue

        # Convert all values in the row to strings and create a tuple
        row_as_tuple = tuple(str(val) for val in row)
        result.append(row_as_tuple)
    return result


"""
following function is the code from original unmasque after modularization.
"""


def get_result_as_tuple_0(res, result):
    for row in res:
        # CHECK IF THE WHOLE ROW IN NONE (SPJA Case)
        nullrow = True
        for val in row:
            if val is not None:
                nullrow = False
                break
        if nullrow:
            continue
        temp = []
        for val in row:
            temp.append(str(val))
        result.append(tuple(temp))
    return result


def getExecOutput(connectionHelper, query):
    print("inside :-- executable.getExecOutput")
    result = []
    try:
        # reveal_globals.global_no_execCall = reveal_globals.global_no_execCall + 1
        res, description = connectionHelper.execute_sql_fetchall(query)
        colnames = [desc[0] for desc in description]
        result.append(tuple(colnames))
        if res is not None:
            result = get_result_as_tuple_1(res, result)

    except Exception as error:
        print('Executable could not be run. Error: ' + str(error))
        raise error
    return result
