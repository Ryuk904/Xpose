You are an expert in writing SQL queries from text descriptions. 
Consider the following schema. 
You should write an SQL for the given text based on this schma. 
Below is the schema, after which the text appears.

Schema: "
 CREATE TABLE LOCALITY (
     L_LOCALITYKEY INTEGER NOT NULL,
     L_NAME CHAR(25) NOT NULL,
     L_REMARK VARCHAR(152),
     PRIMARY KEY (L_LOCALITYKEY)
 );

 CREATE TABLE ASSOCIATION (
     A_ASSOCIATIONKEY INTEGER NOT NULL,
     A_NAME CHAR(25) NOT NULL,
     A_LOCALITYKEY INTEGER NOT NULL,
     A_REMARK VARCHAR(152),
     PRIMARY KEY (A_ASSOCIATIONKEY),
     FOREIGN KEY (A_LOCALITYKEY) REFERENCES LOCALITY(L_LOCALITYKEY)
 );

 CREATE TABLE ART_WORK (
     A_W_ART_WORKKEY INTEGER NOT NULL,
     A_W_NAME VARCHAR(55) NOT NULL,
     A_W_ARTISAN CHAR(25) NOT NULL,
     A_W_BRAND CHAR(10) NOT NULL,
     A_W_TYPE VARCHAR(25) NOT NULL,
     A_W_SIZE INTEGER NOT NULL,
     A_W_CONTAINER CHAR(10) NOT NULL,
     A_W_DEALPRICE DECIMAL(15,2) NOT NULL,
     A_W_REMARK VARCHAR(23) NOT NULL,
     PRIMARY KEY (A_W_ART_WORKKEY)
 );

 CREATE TABLE ART_DEALER (
     A_D_DEALKEY INTEGER NOT NULL,
     A_D_NAME CHAR(25) NOT NULL,
     A_D_ADDRESS VARCHAR(40) NOT NULL,
     A_D_ASSOCIATIONKEY INTEGER NOT NULL,
     A_D_PHONE CHAR(15) NOT NULL,
     A_D_ACCTBAL DECIMAL(15,2) NOT NULL,
     A_D_REMARK VARCHAR(101) NOT NULL,
     PRIMARY KEY (A_D_DEALKEY),
     FOREIGN KEY (A_D_ASSOCIATIONKEY) REFERENCES ASSOCIATION(A_ASSOCIATIONKEY)
 );

 CREATE TABLE ART_WORKDEAL (
     A_D_ART_WORKKEY INTEGER NOT NULL,
     A_D_DEALKEY INTEGER NOT NULL,
     A_D_AVAILQTY INTEGER NOT NULL,
     A_D_DEALCOST DECIMAL(15,2) NOT NULL,
     A_D_REMARK VARCHAR(199) NOT NULL,
     PRIMARY KEY (A_D_ART_WORKKEY, A_D_DEALKEY),
     FOREIGN KEY (A_D_ART_WORKKEY) REFERENCES ART_WORK(A_W_ART_WORKKEY),
     FOREIGN KEY (A_D_DEALKEY) REFERENCES ART_DEALER(A_D_DEALKEY)
 );

 CREATE TABLE PATRON (
     PA_PATRKEY INTEGER NOT NULL,
     PA_NAME VARCHAR(25) NOT NULL,
     PA_ADDRESS VARCHAR(40) NOT NULL,
     PA_ASSOCIATIONKEY INTEGER NOT NULL,
     PA_PHONE CHAR(15) NOT NULL,
     PA_ACCTBAL DECIMAL(15,2) NOT NULL,
     PA_ARTSEGMENT CHAR(10) NOT NULL,
     PA_REMARK VARCHAR(117) NOT NULL,
     PRIMARY KEY (PA_PATRKEY),
     FOREIGN KEY (PA_ASSOCIATIONKEY) REFERENCES ASSOCIATION(A_ASSOCIATIONKEY)
 );

 CREATE TABLE REQUEST (
     R_REQUESTKEY INTEGER NOT NULL,
     R_PATRKEY INTEGER NOT NULL,
     R_REQUESTTATUS CHAR(1) NOT NULL,
     R_TOTALPRICE DECIMAL(15,2) NOT NULL,
     R_REQUESTDATE DATE NOT NULL,
     R_REQUESTPRIORITY CHAR(15) NOT NULL,
     R_AGENT CHAR(15) NOT NULL,
     R_TRANSPORTPRIORITY INTEGER NOT NULL,
     R_REMARK VARCHAR(79) NOT NULL,
     PRIMARY KEY (R_REQUESTKEY),
     FOREIGN KEY (R_PATRKEY) REFERENCES PATRON(PA_PATRKEY)
 );

 CREATE TABLE PAINTING (
     PAINT_REQUESTKEY INTEGER NOT NULL,
     PAINT_ART_WORKKEY INTEGER NOT NULL,
     PAINT_DEALKEY INTEGER NOT NULL,
     PAINT_SERIESNUMBER INTEGER NOT NULL,
     PAINT_QUANTITY DECIMAL(15,2) NOT NULL,
     PAINT_SALESPRICE DECIMAL(15,2) NOT NULL,
     PAINT_DISCOUNT DECIMAL(15,2) NOT NULL,
     PAINT_TAX DECIMAL(15,2) NOT NULL,
     PAINT_RETURNFLAG CHAR(1) NOT NULL,
     PAINT_SERIESSTATUS CHAR(1) NOT NULL,
     PAINT_TRANSPORTDATE DATE NOT NULL,
     PAINT_COMMITDATE DATE NOT NULL,
     PAINT_RECEIPTDATE DATE NOT NULL,
     PAINT_TRANSPORTINSTRUCT CHAR(25) NOT NULL,
     PAINT_TRANSPORTMODE CHAR(10) NOT NULL,
     PAINT_REMARK VARCHAR(44) NOT NULL,
     PRIMARY KEY (PAINT_REQUESTKEY, PAINT_SERIESNUMBER),
     FOREIGN KEY (PAINT_REQUESTKEY) REFERENCES REQUEST(R_REQUESTKEY),
     FOREIGN KEY (PAINT_ART_WORKKEY, PAINT_DEALKEY) REFERENCES ART_WORKDEAL(A_D_ART_WORKKEY, A_D_DEALKEY)
 );
"


Text:
"The Query counts, by transport mode, for paintings actually received by patrons in the year 1995, the
number of paintings belonging to requests for which the receiptdate exceeds the commitdate for two different
specified transport modes. Only paintings that were actually transported before the commitdate are considered.
The late paintings are partitioned into two groups, those with
priority URGENT or HIGH, and those with a priority other than URGENT or HIGH."

 Now, give me an SQL query that matches the above text description.
 Make sure the query is correct and optimized.

